{
    "title": "coppeliasim_virtualrobot_undefined",
    "id": "urn:dev:ops:32473-virtual-robot",
    "description": "robot template",
    "links":[{
      "href": "http://example.com",
      "type": "model/stl",
      "rel": "workspace"
    },
    {
      "href": "http://example.com",
      "type": "text/csv",
      "rel": "dataset-points"     
    }
    ],
    "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "@language": "en"
        }
      ],
    "@type":"Thing",
    "security": "nosec_sc",
    "securityDefinitions": { 
      "nosec_sc": {
        "scheme": "nosec" 
      }
    },
    "properties": {
        "getJointposition":{
            "title": "get position of each joint",
            "description": "maxItems,minItems,minimum,maximum are decided by sprecific virtual robot",
            "type": "object",
            "properties":{
            },
            "readOnly": true,
            "observable": true,
            "forms": [
              {
                "href": "http://localhost:8080/robot_template/properties/getJointposition",
                "contentType": "application/json",
                "op": [
                  "readproperty"
                ],
                "htv:methodName": "GET"
              }
            ]
        },
        "getCartesianposition":{
            "title": "get cartesian position of robotic end-effector",
            "description": "minimum,maximum is decided by specific robot",
            "type": "object",
            "properties":{
                "x":{
                    "type" : "number",
                    "minimum": -100,
                    "maximum": 100
                },
                "y":{
                    "type" : "number",
                    "minimum": -100,
                    "maximum": 100
                },
                "z":{
                    "type" : "number",
                    "minimum": -100,
                    "maximum": 100
                }
            },
            "observable": true,
            "readOnly": true,
            "forms": [
                {
                  "href": "http://localhost:8080/robot_template/properties/getCartesianposition",
                  "contentType": "application/json",
                  "op": [
                    "readproperty"
                  ],
                  "htv:methodName": "GET"
                }
              ]
        }
    },
    "actions": {
        "moveTojointPosition":{
            "title": "let robot move according to joint position",
            "description": "maxItems,minItems,minimum,maximum are decided by sprecific virtual robot",
            "input": {
                "type": "object",
                "properties":{}
            },
            "forms":  [
                {
                  "href": "http://localhost:8080/robot_template/actions/moveTojointPosition",
                  "contentType": "application/json",
                  "op": [
                    "invokeaction"
                  ],
                  "htv:methodName": "PUT"
                }
              ]
        },
        "moveTocartesianPosition":{
            "title": "make robot move according to cartesian position",
            "description": "minimum,maximum are decided by sprecific virtual robot",
            "input": {
                "type": "object",
                "properties": {
                  "x":{
                    "type" : "number",
                    "minimum": -100,
                    "maximum": 100
                  },
                  "y":{
                    "type" : "number",
                    "minimum": -100,
                    "maximum": 100
                  },
                  "z":{
                    "type" : "number",
                    "minimum": -100,
                    "maximum": 100
                  }  
                }        
            },
            "forms":  [
                {
                  "href": "http://localhost:8080/robot_template/actions/moveTocartesianPosition",
                  "contentType": "application/json",
                  "op": [
                    "invokeaction"
                  ],
                  "htv:methodName": "PUT"
                }
              ]
        }
    }
}